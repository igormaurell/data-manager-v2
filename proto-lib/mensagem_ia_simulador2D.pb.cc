// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: mensagem_ia_simulador2D.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "mensagem_ia_simulador2D.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace {

const ::google::protobuf::Descriptor* PacotePathPlanning_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PacotePathPlanning_reflection_ = NULL;
const ::google::protobuf::Descriptor* PacoteRoboIA_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PacoteRoboIA_reflection_ = NULL;
const ::google::protobuf::Descriptor* PacoteIASimulador2D_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PacoteIASimulador2D_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* PacoteIASimulador2D_CorEquipe_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* PacoteIASimulador2D_LadoCampo_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_mensagem_5fia_5fsimulador2D_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_mensagem_5fia_5fsimulador2D_2eproto() {
  protobuf_AddDesc_mensagem_5fia_5fsimulador2D_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "mensagem_ia_simulador2D.proto");
  GOOGLE_CHECK(file != NULL);
  PacotePathPlanning_descriptor_ = file->message_type(0);
  static const int PacotePathPlanning_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PacotePathPlanning, x_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PacotePathPlanning, y_),
  };
  PacotePathPlanning_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PacotePathPlanning_descriptor_,
      PacotePathPlanning::default_instance_,
      PacotePathPlanning_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PacotePathPlanning, _has_bits_[0]),
      -1,
      -1,
      sizeof(PacotePathPlanning),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PacotePathPlanning, _internal_metadata_),
      -1);
  PacoteRoboIA_descriptor_ = file->message_type(1);
  static const int PacoteRoboIA_offsets_[16] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PacoteRoboIA, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PacoteRoboIA, x_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PacoteRoboIA, y_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PacoteRoboIA, velx_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PacoteRoboIA, vely_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PacoteRoboIA, orientation_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PacoteRoboIA, skill_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PacoteRoboIA, tatica_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PacoteRoboIA, informacoessensorias_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PacoteRoboIA, alvox_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PacoteRoboIA, alvoy_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PacoteRoboIA, pathplanning_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PacoteRoboIA, vel_ang_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PacoteRoboIA, chute_baixo_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PacoteRoboIA, chute_alto_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PacoteRoboIA, drible_ligado_),
  };
  PacoteRoboIA_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PacoteRoboIA_descriptor_,
      PacoteRoboIA::default_instance_,
      PacoteRoboIA_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PacoteRoboIA, _has_bits_[0]),
      -1,
      -1,
      sizeof(PacoteRoboIA),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PacoteRoboIA, _internal_metadata_),
      -1);
  PacoteIASimulador2D_descriptor_ = file->message_type(2);
  static const int PacoteIASimulador2D_offsets_[8] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PacoteIASimulador2D, bola_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PacoteIASimulador2D, dadosestados_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PacoteIASimulador2D, jogada_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PacoteIASimulador2D, fatosdomundo_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PacoteIASimulador2D, robos_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PacoteIASimulador2D, robosadv_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PacoteIASimulador2D, corequipe_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PacoteIASimulador2D, ladocampo_),
  };
  PacoteIASimulador2D_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PacoteIASimulador2D_descriptor_,
      PacoteIASimulador2D::default_instance_,
      PacoteIASimulador2D_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PacoteIASimulador2D, _has_bits_[0]),
      -1,
      -1,
      sizeof(PacoteIASimulador2D),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PacoteIASimulador2D, _internal_metadata_),
      -1);
  PacoteIASimulador2D_CorEquipe_descriptor_ = PacoteIASimulador2D_descriptor_->enum_type(0);
  PacoteIASimulador2D_LadoCampo_descriptor_ = PacoteIASimulador2D_descriptor_->enum_type(1);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_mensagem_5fia_5fsimulador2D_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PacotePathPlanning_descriptor_, &PacotePathPlanning::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PacoteRoboIA_descriptor_, &PacoteRoboIA::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PacoteIASimulador2D_descriptor_, &PacoteIASimulador2D::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_mensagem_5fia_5fsimulador2D_2eproto() {
  delete PacotePathPlanning::default_instance_;
  delete PacotePathPlanning_reflection_;
  delete PacoteRoboIA::default_instance_;
  delete PacoteRoboIA_reflection_;
  delete PacoteIASimulador2D::default_instance_;
  delete PacoteIASimulador2D_reflection_;
}

void protobuf_AddDesc_mensagem_5fia_5fsimulador2D_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AddDesc_mensagem_5fia_5fsimulador2D_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::protobuf_AddDesc_messages_5frobocup_5fssl_5freferee_2eproto();
  ::protobuf_AddDesc_mensagem_5fgerente_5fvisao_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\035mensagem_ia_simulador2D.proto\032\"message"
    "s_robocup_ssl_referee.proto\032\034mensagem_ge"
    "rente_visao.proto\"*\n\022PacotePathPlanning\022"
    "\t\n\001x\030\001 \003(\002\022\t\n\001y\030\002 \003(\002\"\270\002\n\014PacoteRoboIA\022\n"
    "\n\002id\030\001 \001(\r\022\t\n\001x\030\002 \001(\002\022\t\n\001y\030\003 \001(\002\022\014\n\004velX"
    "\030\004 \001(\002\022\014\n\004velY\030\005 \001(\002\022\023\n\013orientation\030\006 \001("
    "\002\022\r\n\005skill\030\007 \001(\t\022\016\n\006tatica\030\010 \001(\t\022\034\n\024info"
    "rmacoesSensorias\030\t \003(\t\022\r\n\005alvoX\030\n \001(\002\022\r\n"
    "\005alvoY\030\013 \001(\002\022)\n\014pathPlanning\030\014 \001(\0132\023.Pac"
    "otePathPlanning\022\017\n\007vel_ang\030\r \001(\002\022\023\n\013chut"
    "e_baixo\030\016 \001(\002\022\022\n\nchute_alto\030\017 \001(\002\022\025\n\rdri"
    "ble_ligado\030\020 \001(\002\"\351\002\n\023PacoteIASimulador2D"
    "\022\031\n\004bola\030\001 \001(\0132\013.PacoteBola\022\"\n\014dadosEsta"
    "dos\030\002 \001(\0132\014.SSL_Referee\022\016\n\006jogada\030\003 \001(\t\022"
    "\024\n\014fatosDoMundo\030\004 \003(\t\022\034\n\005robos\030\005 \003(\0132\r.P"
    "acoteRoboIA\022\035\n\010robosAdv\030\006 \003(\0132\013.PacoteRo"
    "bo\0221\n\tcorEquipe\030\007 \002(\0162\036.PacoteIASimulado"
    "r2D.CorEquipe\0221\n\tladoCampo\030\010 \001(\0162\036.Pacot"
    "eIASimulador2D.LadoCampo\"\"\n\tCorEquipe\022\013\n"
    "\007AMARELO\020\000\022\010\n\004AZUL\020\001\"&\n\tLadoCampo\022\014\n\010ESQ"
    "UERDO\020\000\022\013\n\007DIREITO\020\001", 820);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "mensagem_ia_simulador2D.proto", &protobuf_RegisterTypes);
  PacotePathPlanning::default_instance_ = new PacotePathPlanning();
  PacoteRoboIA::default_instance_ = new PacoteRoboIA();
  PacoteIASimulador2D::default_instance_ = new PacoteIASimulador2D();
  PacotePathPlanning::default_instance_->InitAsDefaultInstance();
  PacoteRoboIA::default_instance_->InitAsDefaultInstance();
  PacoteIASimulador2D::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_mensagem_5fia_5fsimulador2D_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_mensagem_5fia_5fsimulador2D_2eproto {
  StaticDescriptorInitializer_mensagem_5fia_5fsimulador2D_2eproto() {
    protobuf_AddDesc_mensagem_5fia_5fsimulador2D_2eproto();
  }
} static_descriptor_initializer_mensagem_5fia_5fsimulador2D_2eproto_;

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PacotePathPlanning::kXFieldNumber;
const int PacotePathPlanning::kYFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PacotePathPlanning::PacotePathPlanning()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:PacotePathPlanning)
}

void PacotePathPlanning::InitAsDefaultInstance() {
}

PacotePathPlanning::PacotePathPlanning(const PacotePathPlanning& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:PacotePathPlanning)
}

void PacotePathPlanning::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PacotePathPlanning::~PacotePathPlanning() {
  // @@protoc_insertion_point(destructor:PacotePathPlanning)
  SharedDtor();
}

void PacotePathPlanning::SharedDtor() {
  if (this != default_instance_) {
  }
}

void PacotePathPlanning::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PacotePathPlanning::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PacotePathPlanning_descriptor_;
}

const PacotePathPlanning& PacotePathPlanning::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_mensagem_5fia_5fsimulador2D_2eproto();
  return *default_instance_;
}

PacotePathPlanning* PacotePathPlanning::default_instance_ = NULL;

PacotePathPlanning* PacotePathPlanning::New(::google::protobuf::Arena* arena) const {
  PacotePathPlanning* n = new PacotePathPlanning;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PacotePathPlanning::Clear() {
// @@protoc_insertion_point(message_clear_start:PacotePathPlanning)
  x_.Clear();
  y_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool PacotePathPlanning::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PacotePathPlanning)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated float x = 1;
      case 1: {
        if (tag == 13) {
         parse_x:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 1, 13, input, this->mutable_x())));
        } else if (tag == 10) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, this->mutable_x())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(13)) goto parse_x;
        if (input->ExpectTag(21)) goto parse_y;
        break;
      }

      // repeated float y = 2;
      case 2: {
        if (tag == 21) {
         parse_y:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 1, 21, input, this->mutable_y())));
        } else if (tag == 18) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, this->mutable_y())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(21)) goto parse_y;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PacotePathPlanning)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PacotePathPlanning)
  return false;
#undef DO_
}

void PacotePathPlanning::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PacotePathPlanning)
  // repeated float x = 1;
  for (int i = 0; i < this->x_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(
      1, this->x(i), output);
  }

  // repeated float y = 2;
  for (int i = 0; i < this->y_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(
      2, this->y(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:PacotePathPlanning)
}

::google::protobuf::uint8* PacotePathPlanning::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:PacotePathPlanning)
  // repeated float x = 1;
  for (int i = 0; i < this->x_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteFloatToArray(1, this->x(i), target);
  }

  // repeated float y = 2;
  for (int i = 0; i < this->y_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteFloatToArray(2, this->y(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PacotePathPlanning)
  return target;
}

int PacotePathPlanning::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:PacotePathPlanning)
  int total_size = 0;

  // repeated float x = 1;
  {
    int data_size = 0;
    data_size = 4 * this->x_size();
    total_size += 1 * this->x_size() + data_size;
  }

  // repeated float y = 2;
  {
    int data_size = 0;
    data_size = 4 * this->y_size();
    total_size += 1 * this->y_size() + data_size;
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PacotePathPlanning::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PacotePathPlanning)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const PacotePathPlanning* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const PacotePathPlanning>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PacotePathPlanning)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PacotePathPlanning)
    MergeFrom(*source);
  }
}

void PacotePathPlanning::MergeFrom(const PacotePathPlanning& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PacotePathPlanning)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  x_.MergeFrom(from.x_);
  y_.MergeFrom(from.y_);
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void PacotePathPlanning::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PacotePathPlanning)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PacotePathPlanning::CopyFrom(const PacotePathPlanning& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PacotePathPlanning)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PacotePathPlanning::IsInitialized() const {

  return true;
}

void PacotePathPlanning::Swap(PacotePathPlanning* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PacotePathPlanning::InternalSwap(PacotePathPlanning* other) {
  x_.UnsafeArenaSwap(&other->x_);
  y_.UnsafeArenaSwap(&other->y_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PacotePathPlanning::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PacotePathPlanning_descriptor_;
  metadata.reflection = PacotePathPlanning_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PacotePathPlanning

// repeated float x = 1;
int PacotePathPlanning::x_size() const {
  return x_.size();
}
void PacotePathPlanning::clear_x() {
  x_.Clear();
}
 float PacotePathPlanning::x(int index) const {
  // @@protoc_insertion_point(field_get:PacotePathPlanning.x)
  return x_.Get(index);
}
 void PacotePathPlanning::set_x(int index, float value) {
  x_.Set(index, value);
  // @@protoc_insertion_point(field_set:PacotePathPlanning.x)
}
 void PacotePathPlanning::add_x(float value) {
  x_.Add(value);
  // @@protoc_insertion_point(field_add:PacotePathPlanning.x)
}
 const ::google::protobuf::RepeatedField< float >&
PacotePathPlanning::x() const {
  // @@protoc_insertion_point(field_list:PacotePathPlanning.x)
  return x_;
}
 ::google::protobuf::RepeatedField< float >*
PacotePathPlanning::mutable_x() {
  // @@protoc_insertion_point(field_mutable_list:PacotePathPlanning.x)
  return &x_;
}

// repeated float y = 2;
int PacotePathPlanning::y_size() const {
  return y_.size();
}
void PacotePathPlanning::clear_y() {
  y_.Clear();
}
 float PacotePathPlanning::y(int index) const {
  // @@protoc_insertion_point(field_get:PacotePathPlanning.y)
  return y_.Get(index);
}
 void PacotePathPlanning::set_y(int index, float value) {
  y_.Set(index, value);
  // @@protoc_insertion_point(field_set:PacotePathPlanning.y)
}
 void PacotePathPlanning::add_y(float value) {
  y_.Add(value);
  // @@protoc_insertion_point(field_add:PacotePathPlanning.y)
}
 const ::google::protobuf::RepeatedField< float >&
PacotePathPlanning::y() const {
  // @@protoc_insertion_point(field_list:PacotePathPlanning.y)
  return y_;
}
 ::google::protobuf::RepeatedField< float >*
PacotePathPlanning::mutable_y() {
  // @@protoc_insertion_point(field_mutable_list:PacotePathPlanning.y)
  return &y_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PacoteRoboIA::kIdFieldNumber;
const int PacoteRoboIA::kXFieldNumber;
const int PacoteRoboIA::kYFieldNumber;
const int PacoteRoboIA::kVelXFieldNumber;
const int PacoteRoboIA::kVelYFieldNumber;
const int PacoteRoboIA::kOrientationFieldNumber;
const int PacoteRoboIA::kSkillFieldNumber;
const int PacoteRoboIA::kTaticaFieldNumber;
const int PacoteRoboIA::kInformacoesSensoriasFieldNumber;
const int PacoteRoboIA::kAlvoXFieldNumber;
const int PacoteRoboIA::kAlvoYFieldNumber;
const int PacoteRoboIA::kPathPlanningFieldNumber;
const int PacoteRoboIA::kVelAngFieldNumber;
const int PacoteRoboIA::kChuteBaixoFieldNumber;
const int PacoteRoboIA::kChuteAltoFieldNumber;
const int PacoteRoboIA::kDribleLigadoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PacoteRoboIA::PacoteRoboIA()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:PacoteRoboIA)
}

void PacoteRoboIA::InitAsDefaultInstance() {
  pathplanning_ = const_cast< ::PacotePathPlanning*>(&::PacotePathPlanning::default_instance());
}

PacoteRoboIA::PacoteRoboIA(const PacoteRoboIA& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:PacoteRoboIA)
}

void PacoteRoboIA::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  id_ = 0u;
  x_ = 0;
  y_ = 0;
  velx_ = 0;
  vely_ = 0;
  orientation_ = 0;
  skill_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  tatica_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  alvox_ = 0;
  alvoy_ = 0;
  pathplanning_ = NULL;
  vel_ang_ = 0;
  chute_baixo_ = 0;
  chute_alto_ = 0;
  drible_ligado_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PacoteRoboIA::~PacoteRoboIA() {
  // @@protoc_insertion_point(destructor:PacoteRoboIA)
  SharedDtor();
}

void PacoteRoboIA::SharedDtor() {
  skill_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  tatica_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
    delete pathplanning_;
  }
}

void PacoteRoboIA::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PacoteRoboIA::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PacoteRoboIA_descriptor_;
}

const PacoteRoboIA& PacoteRoboIA::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_mensagem_5fia_5fsimulador2D_2eproto();
  return *default_instance_;
}

PacoteRoboIA* PacoteRoboIA::default_instance_ = NULL;

PacoteRoboIA* PacoteRoboIA::New(::google::protobuf::Arena* arena) const {
  PacoteRoboIA* n = new PacoteRoboIA;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PacoteRoboIA::Clear() {
// @@protoc_insertion_point(message_clear_start:PacoteRoboIA)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(PacoteRoboIA, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<PacoteRoboIA*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 255u) {
    ZR_(id_, orientation_);
    if (has_skill()) {
      skill_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_tatica()) {
      tatica_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }
  if (_has_bits_[8 / 32] & 65024u) {
    ZR_(alvox_, alvoy_);
    ZR_(vel_ang_, drible_ligado_);
    if (has_pathplanning()) {
      if (pathplanning_ != NULL) pathplanning_->::PacotePathPlanning::Clear();
    }
  }

#undef ZR_HELPER_
#undef ZR_

  informacoessensorias_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool PacoteRoboIA::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PacoteRoboIA)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(16383);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(21)) goto parse_x;
        break;
      }

      // optional float x = 2;
      case 2: {
        if (tag == 21) {
         parse_x:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &x_)));
          set_has_x();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(29)) goto parse_y;
        break;
      }

      // optional float y = 3;
      case 3: {
        if (tag == 29) {
         parse_y:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &y_)));
          set_has_y();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(37)) goto parse_velX;
        break;
      }

      // optional float velX = 4;
      case 4: {
        if (tag == 37) {
         parse_velX:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &velx_)));
          set_has_velx();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(45)) goto parse_velY;
        break;
      }

      // optional float velY = 5;
      case 5: {
        if (tag == 45) {
         parse_velY:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &vely_)));
          set_has_vely();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(53)) goto parse_orientation;
        break;
      }

      // optional float orientation = 6;
      case 6: {
        if (tag == 53) {
         parse_orientation:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &orientation_)));
          set_has_orientation();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_skill;
        break;
      }

      // optional string skill = 7;
      case 7: {
        if (tag == 58) {
         parse_skill:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_skill()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->skill().data(), this->skill().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "PacoteRoboIA.skill");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(66)) goto parse_tatica;
        break;
      }

      // optional string tatica = 8;
      case 8: {
        if (tag == 66) {
         parse_tatica:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_tatica()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->tatica().data(), this->tatica().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "PacoteRoboIA.tatica");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(74)) goto parse_informacoesSensorias;
        break;
      }

      // repeated string informacoesSensorias = 9;
      case 9: {
        if (tag == 74) {
         parse_informacoesSensorias:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_informacoessensorias()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->informacoessensorias(this->informacoessensorias_size() - 1).data(),
            this->informacoessensorias(this->informacoessensorias_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "PacoteRoboIA.informacoesSensorias");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(74)) goto parse_informacoesSensorias;
        if (input->ExpectTag(85)) goto parse_alvoX;
        break;
      }

      // optional float alvoX = 10;
      case 10: {
        if (tag == 85) {
         parse_alvoX:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &alvox_)));
          set_has_alvox();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(93)) goto parse_alvoY;
        break;
      }

      // optional float alvoY = 11;
      case 11: {
        if (tag == 93) {
         parse_alvoY:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &alvoy_)));
          set_has_alvoy();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(98)) goto parse_pathPlanning;
        break;
      }

      // optional .PacotePathPlanning pathPlanning = 12;
      case 12: {
        if (tag == 98) {
         parse_pathPlanning:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_pathplanning()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(109)) goto parse_vel_ang;
        break;
      }

      // optional float vel_ang = 13;
      case 13: {
        if (tag == 109) {
         parse_vel_ang:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &vel_ang_)));
          set_has_vel_ang();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(117)) goto parse_chute_baixo;
        break;
      }

      // optional float chute_baixo = 14;
      case 14: {
        if (tag == 117) {
         parse_chute_baixo:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &chute_baixo_)));
          set_has_chute_baixo();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(125)) goto parse_chute_alto;
        break;
      }

      // optional float chute_alto = 15;
      case 15: {
        if (tag == 125) {
         parse_chute_alto:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &chute_alto_)));
          set_has_chute_alto();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(133)) goto parse_drible_ligado;
        break;
      }

      // optional float drible_ligado = 16;
      case 16: {
        if (tag == 133) {
         parse_drible_ligado:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &drible_ligado_)));
          set_has_drible_ligado();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PacoteRoboIA)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PacoteRoboIA)
  return false;
#undef DO_
}

void PacoteRoboIA::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PacoteRoboIA)
  // optional uint32 id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->id(), output);
  }

  // optional float x = 2;
  if (has_x()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->x(), output);
  }

  // optional float y = 3;
  if (has_y()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->y(), output);
  }

  // optional float velX = 4;
  if (has_velx()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(4, this->velx(), output);
  }

  // optional float velY = 5;
  if (has_vely()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(5, this->vely(), output);
  }

  // optional float orientation = 6;
  if (has_orientation()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(6, this->orientation(), output);
  }

  // optional string skill = 7;
  if (has_skill()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->skill().data(), this->skill().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "PacoteRoboIA.skill");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->skill(), output);
  }

  // optional string tatica = 8;
  if (has_tatica()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->tatica().data(), this->tatica().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "PacoteRoboIA.tatica");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->tatica(), output);
  }

  // repeated string informacoesSensorias = 9;
  for (int i = 0; i < this->informacoessensorias_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->informacoessensorias(i).data(), this->informacoessensorias(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "PacoteRoboIA.informacoesSensorias");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      9, this->informacoessensorias(i), output);
  }

  // optional float alvoX = 10;
  if (has_alvox()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(10, this->alvox(), output);
  }

  // optional float alvoY = 11;
  if (has_alvoy()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(11, this->alvoy(), output);
  }

  // optional .PacotePathPlanning pathPlanning = 12;
  if (has_pathplanning()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      12, *this->pathplanning_, output);
  }

  // optional float vel_ang = 13;
  if (has_vel_ang()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(13, this->vel_ang(), output);
  }

  // optional float chute_baixo = 14;
  if (has_chute_baixo()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(14, this->chute_baixo(), output);
  }

  // optional float chute_alto = 15;
  if (has_chute_alto()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(15, this->chute_alto(), output);
  }

  // optional float drible_ligado = 16;
  if (has_drible_ligado()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(16, this->drible_ligado(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:PacoteRoboIA)
}

::google::protobuf::uint8* PacoteRoboIA::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:PacoteRoboIA)
  // optional uint32 id = 1;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->id(), target);
  }

  // optional float x = 2;
  if (has_x()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->x(), target);
  }

  // optional float y = 3;
  if (has_y()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->y(), target);
  }

  // optional float velX = 4;
  if (has_velx()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(4, this->velx(), target);
  }

  // optional float velY = 5;
  if (has_vely()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(5, this->vely(), target);
  }

  // optional float orientation = 6;
  if (has_orientation()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(6, this->orientation(), target);
  }

  // optional string skill = 7;
  if (has_skill()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->skill().data(), this->skill().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "PacoteRoboIA.skill");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->skill(), target);
  }

  // optional string tatica = 8;
  if (has_tatica()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->tatica().data(), this->tatica().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "PacoteRoboIA.tatica");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->tatica(), target);
  }

  // repeated string informacoesSensorias = 9;
  for (int i = 0; i < this->informacoessensorias_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->informacoessensorias(i).data(), this->informacoessensorias(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "PacoteRoboIA.informacoesSensorias");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(9, this->informacoessensorias(i), target);
  }

  // optional float alvoX = 10;
  if (has_alvox()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(10, this->alvox(), target);
  }

  // optional float alvoY = 11;
  if (has_alvoy()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(11, this->alvoy(), target);
  }

  // optional .PacotePathPlanning pathPlanning = 12;
  if (has_pathplanning()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        12, *this->pathplanning_, false, target);
  }

  // optional float vel_ang = 13;
  if (has_vel_ang()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(13, this->vel_ang(), target);
  }

  // optional float chute_baixo = 14;
  if (has_chute_baixo()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(14, this->chute_baixo(), target);
  }

  // optional float chute_alto = 15;
  if (has_chute_alto()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(15, this->chute_alto(), target);
  }

  // optional float drible_ligado = 16;
  if (has_drible_ligado()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(16, this->drible_ligado(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PacoteRoboIA)
  return target;
}

int PacoteRoboIA::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:PacoteRoboIA)
  int total_size = 0;

  if (_has_bits_[0 / 32] & 255u) {
    // optional uint32 id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->id());
    }

    // optional float x = 2;
    if (has_x()) {
      total_size += 1 + 4;
    }

    // optional float y = 3;
    if (has_y()) {
      total_size += 1 + 4;
    }

    // optional float velX = 4;
    if (has_velx()) {
      total_size += 1 + 4;
    }

    // optional float velY = 5;
    if (has_vely()) {
      total_size += 1 + 4;
    }

    // optional float orientation = 6;
    if (has_orientation()) {
      total_size += 1 + 4;
    }

    // optional string skill = 7;
    if (has_skill()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->skill());
    }

    // optional string tatica = 8;
    if (has_tatica()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->tatica());
    }

  }
  if (_has_bits_[9 / 32] & 65024u) {
    // optional float alvoX = 10;
    if (has_alvox()) {
      total_size += 1 + 4;
    }

    // optional float alvoY = 11;
    if (has_alvoy()) {
      total_size += 1 + 4;
    }

    // optional .PacotePathPlanning pathPlanning = 12;
    if (has_pathplanning()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->pathplanning_);
    }

    // optional float vel_ang = 13;
    if (has_vel_ang()) {
      total_size += 1 + 4;
    }

    // optional float chute_baixo = 14;
    if (has_chute_baixo()) {
      total_size += 1 + 4;
    }

    // optional float chute_alto = 15;
    if (has_chute_alto()) {
      total_size += 1 + 4;
    }

    // optional float drible_ligado = 16;
    if (has_drible_ligado()) {
      total_size += 2 + 4;
    }

  }
  // repeated string informacoesSensorias = 9;
  total_size += 1 * this->informacoessensorias_size();
  for (int i = 0; i < this->informacoessensorias_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->informacoessensorias(i));
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PacoteRoboIA::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PacoteRoboIA)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const PacoteRoboIA* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const PacoteRoboIA>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PacoteRoboIA)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PacoteRoboIA)
    MergeFrom(*source);
  }
}

void PacoteRoboIA::MergeFrom(const PacoteRoboIA& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PacoteRoboIA)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  informacoessensorias_.MergeFrom(from.informacoessensorias_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
    if (from.has_x()) {
      set_x(from.x());
    }
    if (from.has_y()) {
      set_y(from.y());
    }
    if (from.has_velx()) {
      set_velx(from.velx());
    }
    if (from.has_vely()) {
      set_vely(from.vely());
    }
    if (from.has_orientation()) {
      set_orientation(from.orientation());
    }
    if (from.has_skill()) {
      set_has_skill();
      skill_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.skill_);
    }
    if (from.has_tatica()) {
      set_has_tatica();
      tatica_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.tatica_);
    }
  }
  if (from._has_bits_[9 / 32] & (0xffu << (9 % 32))) {
    if (from.has_alvox()) {
      set_alvox(from.alvox());
    }
    if (from.has_alvoy()) {
      set_alvoy(from.alvoy());
    }
    if (from.has_pathplanning()) {
      mutable_pathplanning()->::PacotePathPlanning::MergeFrom(from.pathplanning());
    }
    if (from.has_vel_ang()) {
      set_vel_ang(from.vel_ang());
    }
    if (from.has_chute_baixo()) {
      set_chute_baixo(from.chute_baixo());
    }
    if (from.has_chute_alto()) {
      set_chute_alto(from.chute_alto());
    }
    if (from.has_drible_ligado()) {
      set_drible_ligado(from.drible_ligado());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void PacoteRoboIA::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PacoteRoboIA)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PacoteRoboIA::CopyFrom(const PacoteRoboIA& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PacoteRoboIA)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PacoteRoboIA::IsInitialized() const {

  return true;
}

void PacoteRoboIA::Swap(PacoteRoboIA* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PacoteRoboIA::InternalSwap(PacoteRoboIA* other) {
  std::swap(id_, other->id_);
  std::swap(x_, other->x_);
  std::swap(y_, other->y_);
  std::swap(velx_, other->velx_);
  std::swap(vely_, other->vely_);
  std::swap(orientation_, other->orientation_);
  skill_.Swap(&other->skill_);
  tatica_.Swap(&other->tatica_);
  informacoessensorias_.UnsafeArenaSwap(&other->informacoessensorias_);
  std::swap(alvox_, other->alvox_);
  std::swap(alvoy_, other->alvoy_);
  std::swap(pathplanning_, other->pathplanning_);
  std::swap(vel_ang_, other->vel_ang_);
  std::swap(chute_baixo_, other->chute_baixo_);
  std::swap(chute_alto_, other->chute_alto_);
  std::swap(drible_ligado_, other->drible_ligado_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PacoteRoboIA::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PacoteRoboIA_descriptor_;
  metadata.reflection = PacoteRoboIA_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PacoteRoboIA

// optional uint32 id = 1;
bool PacoteRoboIA::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void PacoteRoboIA::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
void PacoteRoboIA::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void PacoteRoboIA::clear_id() {
  id_ = 0u;
  clear_has_id();
}
 ::google::protobuf::uint32 PacoteRoboIA::id() const {
  // @@protoc_insertion_point(field_get:PacoteRoboIA.id)
  return id_;
}
 void PacoteRoboIA::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:PacoteRoboIA.id)
}

// optional float x = 2;
bool PacoteRoboIA::has_x() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void PacoteRoboIA::set_has_x() {
  _has_bits_[0] |= 0x00000002u;
}
void PacoteRoboIA::clear_has_x() {
  _has_bits_[0] &= ~0x00000002u;
}
void PacoteRoboIA::clear_x() {
  x_ = 0;
  clear_has_x();
}
 float PacoteRoboIA::x() const {
  // @@protoc_insertion_point(field_get:PacoteRoboIA.x)
  return x_;
}
 void PacoteRoboIA::set_x(float value) {
  set_has_x();
  x_ = value;
  // @@protoc_insertion_point(field_set:PacoteRoboIA.x)
}

// optional float y = 3;
bool PacoteRoboIA::has_y() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void PacoteRoboIA::set_has_y() {
  _has_bits_[0] |= 0x00000004u;
}
void PacoteRoboIA::clear_has_y() {
  _has_bits_[0] &= ~0x00000004u;
}
void PacoteRoboIA::clear_y() {
  y_ = 0;
  clear_has_y();
}
 float PacoteRoboIA::y() const {
  // @@protoc_insertion_point(field_get:PacoteRoboIA.y)
  return y_;
}
 void PacoteRoboIA::set_y(float value) {
  set_has_y();
  y_ = value;
  // @@protoc_insertion_point(field_set:PacoteRoboIA.y)
}

// optional float velX = 4;
bool PacoteRoboIA::has_velx() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void PacoteRoboIA::set_has_velx() {
  _has_bits_[0] |= 0x00000008u;
}
void PacoteRoboIA::clear_has_velx() {
  _has_bits_[0] &= ~0x00000008u;
}
void PacoteRoboIA::clear_velx() {
  velx_ = 0;
  clear_has_velx();
}
 float PacoteRoboIA::velx() const {
  // @@protoc_insertion_point(field_get:PacoteRoboIA.velX)
  return velx_;
}
 void PacoteRoboIA::set_velx(float value) {
  set_has_velx();
  velx_ = value;
  // @@protoc_insertion_point(field_set:PacoteRoboIA.velX)
}

// optional float velY = 5;
bool PacoteRoboIA::has_vely() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void PacoteRoboIA::set_has_vely() {
  _has_bits_[0] |= 0x00000010u;
}
void PacoteRoboIA::clear_has_vely() {
  _has_bits_[0] &= ~0x00000010u;
}
void PacoteRoboIA::clear_vely() {
  vely_ = 0;
  clear_has_vely();
}
 float PacoteRoboIA::vely() const {
  // @@protoc_insertion_point(field_get:PacoteRoboIA.velY)
  return vely_;
}
 void PacoteRoboIA::set_vely(float value) {
  set_has_vely();
  vely_ = value;
  // @@protoc_insertion_point(field_set:PacoteRoboIA.velY)
}

// optional float orientation = 6;
bool PacoteRoboIA::has_orientation() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void PacoteRoboIA::set_has_orientation() {
  _has_bits_[0] |= 0x00000020u;
}
void PacoteRoboIA::clear_has_orientation() {
  _has_bits_[0] &= ~0x00000020u;
}
void PacoteRoboIA::clear_orientation() {
  orientation_ = 0;
  clear_has_orientation();
}
 float PacoteRoboIA::orientation() const {
  // @@protoc_insertion_point(field_get:PacoteRoboIA.orientation)
  return orientation_;
}
 void PacoteRoboIA::set_orientation(float value) {
  set_has_orientation();
  orientation_ = value;
  // @@protoc_insertion_point(field_set:PacoteRoboIA.orientation)
}

// optional string skill = 7;
bool PacoteRoboIA::has_skill() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void PacoteRoboIA::set_has_skill() {
  _has_bits_[0] |= 0x00000040u;
}
void PacoteRoboIA::clear_has_skill() {
  _has_bits_[0] &= ~0x00000040u;
}
void PacoteRoboIA::clear_skill() {
  skill_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_skill();
}
 const ::std::string& PacoteRoboIA::skill() const {
  // @@protoc_insertion_point(field_get:PacoteRoboIA.skill)
  return skill_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PacoteRoboIA::set_skill(const ::std::string& value) {
  set_has_skill();
  skill_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:PacoteRoboIA.skill)
}
 void PacoteRoboIA::set_skill(const char* value) {
  set_has_skill();
  skill_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:PacoteRoboIA.skill)
}
 void PacoteRoboIA::set_skill(const char* value, size_t size) {
  set_has_skill();
  skill_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:PacoteRoboIA.skill)
}
 ::std::string* PacoteRoboIA::mutable_skill() {
  set_has_skill();
  // @@protoc_insertion_point(field_mutable:PacoteRoboIA.skill)
  return skill_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* PacoteRoboIA::release_skill() {
  // @@protoc_insertion_point(field_release:PacoteRoboIA.skill)
  clear_has_skill();
  return skill_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PacoteRoboIA::set_allocated_skill(::std::string* skill) {
  if (skill != NULL) {
    set_has_skill();
  } else {
    clear_has_skill();
  }
  skill_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), skill);
  // @@protoc_insertion_point(field_set_allocated:PacoteRoboIA.skill)
}

// optional string tatica = 8;
bool PacoteRoboIA::has_tatica() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
void PacoteRoboIA::set_has_tatica() {
  _has_bits_[0] |= 0x00000080u;
}
void PacoteRoboIA::clear_has_tatica() {
  _has_bits_[0] &= ~0x00000080u;
}
void PacoteRoboIA::clear_tatica() {
  tatica_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_tatica();
}
 const ::std::string& PacoteRoboIA::tatica() const {
  // @@protoc_insertion_point(field_get:PacoteRoboIA.tatica)
  return tatica_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PacoteRoboIA::set_tatica(const ::std::string& value) {
  set_has_tatica();
  tatica_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:PacoteRoboIA.tatica)
}
 void PacoteRoboIA::set_tatica(const char* value) {
  set_has_tatica();
  tatica_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:PacoteRoboIA.tatica)
}
 void PacoteRoboIA::set_tatica(const char* value, size_t size) {
  set_has_tatica();
  tatica_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:PacoteRoboIA.tatica)
}
 ::std::string* PacoteRoboIA::mutable_tatica() {
  set_has_tatica();
  // @@protoc_insertion_point(field_mutable:PacoteRoboIA.tatica)
  return tatica_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* PacoteRoboIA::release_tatica() {
  // @@protoc_insertion_point(field_release:PacoteRoboIA.tatica)
  clear_has_tatica();
  return tatica_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PacoteRoboIA::set_allocated_tatica(::std::string* tatica) {
  if (tatica != NULL) {
    set_has_tatica();
  } else {
    clear_has_tatica();
  }
  tatica_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), tatica);
  // @@protoc_insertion_point(field_set_allocated:PacoteRoboIA.tatica)
}

// repeated string informacoesSensorias = 9;
int PacoteRoboIA::informacoessensorias_size() const {
  return informacoessensorias_.size();
}
void PacoteRoboIA::clear_informacoessensorias() {
  informacoessensorias_.Clear();
}
 const ::std::string& PacoteRoboIA::informacoessensorias(int index) const {
  // @@protoc_insertion_point(field_get:PacoteRoboIA.informacoesSensorias)
  return informacoessensorias_.Get(index);
}
 ::std::string* PacoteRoboIA::mutable_informacoessensorias(int index) {
  // @@protoc_insertion_point(field_mutable:PacoteRoboIA.informacoesSensorias)
  return informacoessensorias_.Mutable(index);
}
 void PacoteRoboIA::set_informacoessensorias(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:PacoteRoboIA.informacoesSensorias)
  informacoessensorias_.Mutable(index)->assign(value);
}
 void PacoteRoboIA::set_informacoessensorias(int index, const char* value) {
  informacoessensorias_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:PacoteRoboIA.informacoesSensorias)
}
 void PacoteRoboIA::set_informacoessensorias(int index, const char* value, size_t size) {
  informacoessensorias_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:PacoteRoboIA.informacoesSensorias)
}
 ::std::string* PacoteRoboIA::add_informacoessensorias() {
  // @@protoc_insertion_point(field_add_mutable:PacoteRoboIA.informacoesSensorias)
  return informacoessensorias_.Add();
}
 void PacoteRoboIA::add_informacoessensorias(const ::std::string& value) {
  informacoessensorias_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:PacoteRoboIA.informacoesSensorias)
}
 void PacoteRoboIA::add_informacoessensorias(const char* value) {
  informacoessensorias_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:PacoteRoboIA.informacoesSensorias)
}
 void PacoteRoboIA::add_informacoessensorias(const char* value, size_t size) {
  informacoessensorias_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:PacoteRoboIA.informacoesSensorias)
}
 const ::google::protobuf::RepeatedPtrField< ::std::string>&
PacoteRoboIA::informacoessensorias() const {
  // @@protoc_insertion_point(field_list:PacoteRoboIA.informacoesSensorias)
  return informacoessensorias_;
}
 ::google::protobuf::RepeatedPtrField< ::std::string>*
PacoteRoboIA::mutable_informacoessensorias() {
  // @@protoc_insertion_point(field_mutable_list:PacoteRoboIA.informacoesSensorias)
  return &informacoessensorias_;
}

// optional float alvoX = 10;
bool PacoteRoboIA::has_alvox() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
void PacoteRoboIA::set_has_alvox() {
  _has_bits_[0] |= 0x00000200u;
}
void PacoteRoboIA::clear_has_alvox() {
  _has_bits_[0] &= ~0x00000200u;
}
void PacoteRoboIA::clear_alvox() {
  alvox_ = 0;
  clear_has_alvox();
}
 float PacoteRoboIA::alvox() const {
  // @@protoc_insertion_point(field_get:PacoteRoboIA.alvoX)
  return alvox_;
}
 void PacoteRoboIA::set_alvox(float value) {
  set_has_alvox();
  alvox_ = value;
  // @@protoc_insertion_point(field_set:PacoteRoboIA.alvoX)
}

// optional float alvoY = 11;
bool PacoteRoboIA::has_alvoy() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
void PacoteRoboIA::set_has_alvoy() {
  _has_bits_[0] |= 0x00000400u;
}
void PacoteRoboIA::clear_has_alvoy() {
  _has_bits_[0] &= ~0x00000400u;
}
void PacoteRoboIA::clear_alvoy() {
  alvoy_ = 0;
  clear_has_alvoy();
}
 float PacoteRoboIA::alvoy() const {
  // @@protoc_insertion_point(field_get:PacoteRoboIA.alvoY)
  return alvoy_;
}
 void PacoteRoboIA::set_alvoy(float value) {
  set_has_alvoy();
  alvoy_ = value;
  // @@protoc_insertion_point(field_set:PacoteRoboIA.alvoY)
}

// optional .PacotePathPlanning pathPlanning = 12;
bool PacoteRoboIA::has_pathplanning() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
void PacoteRoboIA::set_has_pathplanning() {
  _has_bits_[0] |= 0x00000800u;
}
void PacoteRoboIA::clear_has_pathplanning() {
  _has_bits_[0] &= ~0x00000800u;
}
void PacoteRoboIA::clear_pathplanning() {
  if (pathplanning_ != NULL) pathplanning_->::PacotePathPlanning::Clear();
  clear_has_pathplanning();
}
const ::PacotePathPlanning& PacoteRoboIA::pathplanning() const {
  // @@protoc_insertion_point(field_get:PacoteRoboIA.pathPlanning)
  return pathplanning_ != NULL ? *pathplanning_ : *default_instance_->pathplanning_;
}
::PacotePathPlanning* PacoteRoboIA::mutable_pathplanning() {
  set_has_pathplanning();
  if (pathplanning_ == NULL) {
    pathplanning_ = new ::PacotePathPlanning;
  }
  // @@protoc_insertion_point(field_mutable:PacoteRoboIA.pathPlanning)
  return pathplanning_;
}
::PacotePathPlanning* PacoteRoboIA::release_pathplanning() {
  // @@protoc_insertion_point(field_release:PacoteRoboIA.pathPlanning)
  clear_has_pathplanning();
  ::PacotePathPlanning* temp = pathplanning_;
  pathplanning_ = NULL;
  return temp;
}
void PacoteRoboIA::set_allocated_pathplanning(::PacotePathPlanning* pathplanning) {
  delete pathplanning_;
  pathplanning_ = pathplanning;
  if (pathplanning) {
    set_has_pathplanning();
  } else {
    clear_has_pathplanning();
  }
  // @@protoc_insertion_point(field_set_allocated:PacoteRoboIA.pathPlanning)
}

// optional float vel_ang = 13;
bool PacoteRoboIA::has_vel_ang() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
void PacoteRoboIA::set_has_vel_ang() {
  _has_bits_[0] |= 0x00001000u;
}
void PacoteRoboIA::clear_has_vel_ang() {
  _has_bits_[0] &= ~0x00001000u;
}
void PacoteRoboIA::clear_vel_ang() {
  vel_ang_ = 0;
  clear_has_vel_ang();
}
 float PacoteRoboIA::vel_ang() const {
  // @@protoc_insertion_point(field_get:PacoteRoboIA.vel_ang)
  return vel_ang_;
}
 void PacoteRoboIA::set_vel_ang(float value) {
  set_has_vel_ang();
  vel_ang_ = value;
  // @@protoc_insertion_point(field_set:PacoteRoboIA.vel_ang)
}

// optional float chute_baixo = 14;
bool PacoteRoboIA::has_chute_baixo() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
void PacoteRoboIA::set_has_chute_baixo() {
  _has_bits_[0] |= 0x00002000u;
}
void PacoteRoboIA::clear_has_chute_baixo() {
  _has_bits_[0] &= ~0x00002000u;
}
void PacoteRoboIA::clear_chute_baixo() {
  chute_baixo_ = 0;
  clear_has_chute_baixo();
}
 float PacoteRoboIA::chute_baixo() const {
  // @@protoc_insertion_point(field_get:PacoteRoboIA.chute_baixo)
  return chute_baixo_;
}
 void PacoteRoboIA::set_chute_baixo(float value) {
  set_has_chute_baixo();
  chute_baixo_ = value;
  // @@protoc_insertion_point(field_set:PacoteRoboIA.chute_baixo)
}

// optional float chute_alto = 15;
bool PacoteRoboIA::has_chute_alto() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
void PacoteRoboIA::set_has_chute_alto() {
  _has_bits_[0] |= 0x00004000u;
}
void PacoteRoboIA::clear_has_chute_alto() {
  _has_bits_[0] &= ~0x00004000u;
}
void PacoteRoboIA::clear_chute_alto() {
  chute_alto_ = 0;
  clear_has_chute_alto();
}
 float PacoteRoboIA::chute_alto() const {
  // @@protoc_insertion_point(field_get:PacoteRoboIA.chute_alto)
  return chute_alto_;
}
 void PacoteRoboIA::set_chute_alto(float value) {
  set_has_chute_alto();
  chute_alto_ = value;
  // @@protoc_insertion_point(field_set:PacoteRoboIA.chute_alto)
}

// optional float drible_ligado = 16;
bool PacoteRoboIA::has_drible_ligado() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
void PacoteRoboIA::set_has_drible_ligado() {
  _has_bits_[0] |= 0x00008000u;
}
void PacoteRoboIA::clear_has_drible_ligado() {
  _has_bits_[0] &= ~0x00008000u;
}
void PacoteRoboIA::clear_drible_ligado() {
  drible_ligado_ = 0;
  clear_has_drible_ligado();
}
 float PacoteRoboIA::drible_ligado() const {
  // @@protoc_insertion_point(field_get:PacoteRoboIA.drible_ligado)
  return drible_ligado_;
}
 void PacoteRoboIA::set_drible_ligado(float value) {
  set_has_drible_ligado();
  drible_ligado_ = value;
  // @@protoc_insertion_point(field_set:PacoteRoboIA.drible_ligado)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

const ::google::protobuf::EnumDescriptor* PacoteIASimulador2D_CorEquipe_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PacoteIASimulador2D_CorEquipe_descriptor_;
}
bool PacoteIASimulador2D_CorEquipe_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const PacoteIASimulador2D_CorEquipe PacoteIASimulador2D::AMARELO;
const PacoteIASimulador2D_CorEquipe PacoteIASimulador2D::AZUL;
const PacoteIASimulador2D_CorEquipe PacoteIASimulador2D::CorEquipe_MIN;
const PacoteIASimulador2D_CorEquipe PacoteIASimulador2D::CorEquipe_MAX;
const int PacoteIASimulador2D::CorEquipe_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* PacoteIASimulador2D_LadoCampo_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PacoteIASimulador2D_LadoCampo_descriptor_;
}
bool PacoteIASimulador2D_LadoCampo_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const PacoteIASimulador2D_LadoCampo PacoteIASimulador2D::ESQUERDO;
const PacoteIASimulador2D_LadoCampo PacoteIASimulador2D::DIREITO;
const PacoteIASimulador2D_LadoCampo PacoteIASimulador2D::LadoCampo_MIN;
const PacoteIASimulador2D_LadoCampo PacoteIASimulador2D::LadoCampo_MAX;
const int PacoteIASimulador2D::LadoCampo_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PacoteIASimulador2D::kBolaFieldNumber;
const int PacoteIASimulador2D::kDadosEstadosFieldNumber;
const int PacoteIASimulador2D::kJogadaFieldNumber;
const int PacoteIASimulador2D::kFatosDoMundoFieldNumber;
const int PacoteIASimulador2D::kRobosFieldNumber;
const int PacoteIASimulador2D::kRobosAdvFieldNumber;
const int PacoteIASimulador2D::kCorEquipeFieldNumber;
const int PacoteIASimulador2D::kLadoCampoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PacoteIASimulador2D::PacoteIASimulador2D()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:PacoteIASimulador2D)
}

void PacoteIASimulador2D::InitAsDefaultInstance() {
  bola_ = const_cast< ::PacoteBola*>(&::PacoteBola::default_instance());
  dadosestados_ = const_cast< ::SSL_Referee*>(&::SSL_Referee::default_instance());
}

PacoteIASimulador2D::PacoteIASimulador2D(const PacoteIASimulador2D& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:PacoteIASimulador2D)
}

void PacoteIASimulador2D::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  bola_ = NULL;
  dadosestados_ = NULL;
  jogada_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  corequipe_ = 0;
  ladocampo_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PacoteIASimulador2D::~PacoteIASimulador2D() {
  // @@protoc_insertion_point(destructor:PacoteIASimulador2D)
  SharedDtor();
}

void PacoteIASimulador2D::SharedDtor() {
  jogada_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
    delete bola_;
    delete dadosestados_;
  }
}

void PacoteIASimulador2D::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PacoteIASimulador2D::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PacoteIASimulador2D_descriptor_;
}

const PacoteIASimulador2D& PacoteIASimulador2D::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_mensagem_5fia_5fsimulador2D_2eproto();
  return *default_instance_;
}

PacoteIASimulador2D* PacoteIASimulador2D::default_instance_ = NULL;

PacoteIASimulador2D* PacoteIASimulador2D::New(::google::protobuf::Arena* arena) const {
  PacoteIASimulador2D* n = new PacoteIASimulador2D;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PacoteIASimulador2D::Clear() {
// @@protoc_insertion_point(message_clear_start:PacoteIASimulador2D)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(PacoteIASimulador2D, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<PacoteIASimulador2D*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 199u) {
    ZR_(corequipe_, ladocampo_);
    if (has_bola()) {
      if (bola_ != NULL) bola_->::PacoteBola::Clear();
    }
    if (has_dadosestados()) {
      if (dadosestados_ != NULL) dadosestados_->::SSL_Referee::Clear();
    }
    if (has_jogada()) {
      jogada_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }

#undef ZR_HELPER_
#undef ZR_

  fatosdomundo_.Clear();
  robos_.Clear();
  robosadv_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool PacoteIASimulador2D::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PacoteIASimulador2D)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .PacoteBola bola = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_bola()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_dadosEstados;
        break;
      }

      // optional .SSL_Referee dadosEstados = 2;
      case 2: {
        if (tag == 18) {
         parse_dadosEstados:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_dadosestados()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_jogada;
        break;
      }

      // optional string jogada = 3;
      case 3: {
        if (tag == 26) {
         parse_jogada:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_jogada()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->jogada().data(), this->jogada().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "PacoteIASimulador2D.jogada");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_fatosDoMundo;
        break;
      }

      // repeated string fatosDoMundo = 4;
      case 4: {
        if (tag == 34) {
         parse_fatosDoMundo:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_fatosdomundo()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->fatosdomundo(this->fatosdomundo_size() - 1).data(),
            this->fatosdomundo(this->fatosdomundo_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "PacoteIASimulador2D.fatosDoMundo");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_fatosDoMundo;
        if (input->ExpectTag(42)) goto parse_robos;
        break;
      }

      // repeated .PacoteRoboIA robos = 5;
      case 5: {
        if (tag == 42) {
         parse_robos:
          DO_(input->IncrementRecursionDepth());
         parse_loop_robos:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_robos()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_loop_robos;
        if (input->ExpectTag(50)) goto parse_loop_robosAdv;
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      // repeated .PacoteRobo robosAdv = 6;
      case 6: {
        if (tag == 50) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_robosAdv:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_robosadv()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_loop_robosAdv;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectTag(56)) goto parse_corEquipe;
        break;
      }

      // required .PacoteIASimulador2D.CorEquipe corEquipe = 7;
      case 7: {
        if (tag == 56) {
         parse_corEquipe:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::PacoteIASimulador2D_CorEquipe_IsValid(value)) {
            set_corequipe(static_cast< ::PacoteIASimulador2D_CorEquipe >(value));
          } else {
            mutable_unknown_fields()->AddVarint(7, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(64)) goto parse_ladoCampo;
        break;
      }

      // optional .PacoteIASimulador2D.LadoCampo ladoCampo = 8;
      case 8: {
        if (tag == 64) {
         parse_ladoCampo:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::PacoteIASimulador2D_LadoCampo_IsValid(value)) {
            set_ladocampo(static_cast< ::PacoteIASimulador2D_LadoCampo >(value));
          } else {
            mutable_unknown_fields()->AddVarint(8, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PacoteIASimulador2D)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PacoteIASimulador2D)
  return false;
#undef DO_
}

void PacoteIASimulador2D::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PacoteIASimulador2D)
  // optional .PacoteBola bola = 1;
  if (has_bola()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->bola_, output);
  }

  // optional .SSL_Referee dadosEstados = 2;
  if (has_dadosestados()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->dadosestados_, output);
  }

  // optional string jogada = 3;
  if (has_jogada()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->jogada().data(), this->jogada().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "PacoteIASimulador2D.jogada");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->jogada(), output);
  }

  // repeated string fatosDoMundo = 4;
  for (int i = 0; i < this->fatosdomundo_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->fatosdomundo(i).data(), this->fatosdomundo(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "PacoteIASimulador2D.fatosDoMundo");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      4, this->fatosdomundo(i), output);
  }

  // repeated .PacoteRoboIA robos = 5;
  for (unsigned int i = 0, n = this->robos_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->robos(i), output);
  }

  // repeated .PacoteRobo robosAdv = 6;
  for (unsigned int i = 0, n = this->robosadv_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->robosadv(i), output);
  }

  // required .PacoteIASimulador2D.CorEquipe corEquipe = 7;
  if (has_corequipe()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      7, this->corequipe(), output);
  }

  // optional .PacoteIASimulador2D.LadoCampo ladoCampo = 8;
  if (has_ladocampo()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      8, this->ladocampo(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:PacoteIASimulador2D)
}

::google::protobuf::uint8* PacoteIASimulador2D::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:PacoteIASimulador2D)
  // optional .PacoteBola bola = 1;
  if (has_bola()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->bola_, false, target);
  }

  // optional .SSL_Referee dadosEstados = 2;
  if (has_dadosestados()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->dadosestados_, false, target);
  }

  // optional string jogada = 3;
  if (has_jogada()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->jogada().data(), this->jogada().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "PacoteIASimulador2D.jogada");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->jogada(), target);
  }

  // repeated string fatosDoMundo = 4;
  for (int i = 0; i < this->fatosdomundo_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->fatosdomundo(i).data(), this->fatosdomundo(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "PacoteIASimulador2D.fatosDoMundo");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(4, this->fatosdomundo(i), target);
  }

  // repeated .PacoteRoboIA robos = 5;
  for (unsigned int i = 0, n = this->robos_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        5, this->robos(i), false, target);
  }

  // repeated .PacoteRobo robosAdv = 6;
  for (unsigned int i = 0, n = this->robosadv_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        6, this->robosadv(i), false, target);
  }

  // required .PacoteIASimulador2D.CorEquipe corEquipe = 7;
  if (has_corequipe()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      7, this->corequipe(), target);
  }

  // optional .PacoteIASimulador2D.LadoCampo ladoCampo = 8;
  if (has_ladocampo()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      8, this->ladocampo(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PacoteIASimulador2D)
  return target;
}

int PacoteIASimulador2D::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:PacoteIASimulador2D)
  int total_size = 0;

  // required .PacoteIASimulador2D.CorEquipe corEquipe = 7;
  if (has_corequipe()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->corequipe());
  }
  if (_has_bits_[0 / 32] & 135u) {
    // optional .PacoteBola bola = 1;
    if (has_bola()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->bola_);
    }

    // optional .SSL_Referee dadosEstados = 2;
    if (has_dadosestados()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->dadosestados_);
    }

    // optional string jogada = 3;
    if (has_jogada()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->jogada());
    }

    // optional .PacoteIASimulador2D.LadoCampo ladoCampo = 8;
    if (has_ladocampo()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->ladocampo());
    }

  }
  // repeated string fatosDoMundo = 4;
  total_size += 1 * this->fatosdomundo_size();
  for (int i = 0; i < this->fatosdomundo_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->fatosdomundo(i));
  }

  // repeated .PacoteRoboIA robos = 5;
  total_size += 1 * this->robos_size();
  for (int i = 0; i < this->robos_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->robos(i));
  }

  // repeated .PacoteRobo robosAdv = 6;
  total_size += 1 * this->robosadv_size();
  for (int i = 0; i < this->robosadv_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->robosadv(i));
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PacoteIASimulador2D::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PacoteIASimulador2D)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const PacoteIASimulador2D* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const PacoteIASimulador2D>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PacoteIASimulador2D)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PacoteIASimulador2D)
    MergeFrom(*source);
  }
}

void PacoteIASimulador2D::MergeFrom(const PacoteIASimulador2D& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PacoteIASimulador2D)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  fatosdomundo_.MergeFrom(from.fatosdomundo_);
  robos_.MergeFrom(from.robos_);
  robosadv_.MergeFrom(from.robosadv_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_bola()) {
      mutable_bola()->::PacoteBola::MergeFrom(from.bola());
    }
    if (from.has_dadosestados()) {
      mutable_dadosestados()->::SSL_Referee::MergeFrom(from.dadosestados());
    }
    if (from.has_jogada()) {
      set_has_jogada();
      jogada_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.jogada_);
    }
    if (from.has_corequipe()) {
      set_corequipe(from.corequipe());
    }
    if (from.has_ladocampo()) {
      set_ladocampo(from.ladocampo());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void PacoteIASimulador2D::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PacoteIASimulador2D)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PacoteIASimulador2D::CopyFrom(const PacoteIASimulador2D& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PacoteIASimulador2D)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PacoteIASimulador2D::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000040) != 0x00000040) return false;

  if (has_bola()) {
    if (!this->bola_->IsInitialized()) return false;
  }
  if (has_dadosestados()) {
    if (!this->dadosestados_->IsInitialized()) return false;
  }
  if (!::google::protobuf::internal::AllAreInitialized(this->robosadv())) return false;
  return true;
}

void PacoteIASimulador2D::Swap(PacoteIASimulador2D* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PacoteIASimulador2D::InternalSwap(PacoteIASimulador2D* other) {
  std::swap(bola_, other->bola_);
  std::swap(dadosestados_, other->dadosestados_);
  jogada_.Swap(&other->jogada_);
  fatosdomundo_.UnsafeArenaSwap(&other->fatosdomundo_);
  robos_.UnsafeArenaSwap(&other->robos_);
  robosadv_.UnsafeArenaSwap(&other->robosadv_);
  std::swap(corequipe_, other->corequipe_);
  std::swap(ladocampo_, other->ladocampo_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PacoteIASimulador2D::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PacoteIASimulador2D_descriptor_;
  metadata.reflection = PacoteIASimulador2D_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PacoteIASimulador2D

// optional .PacoteBola bola = 1;
bool PacoteIASimulador2D::has_bola() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void PacoteIASimulador2D::set_has_bola() {
  _has_bits_[0] |= 0x00000001u;
}
void PacoteIASimulador2D::clear_has_bola() {
  _has_bits_[0] &= ~0x00000001u;
}
void PacoteIASimulador2D::clear_bola() {
  if (bola_ != NULL) bola_->::PacoteBola::Clear();
  clear_has_bola();
}
const ::PacoteBola& PacoteIASimulador2D::bola() const {
  // @@protoc_insertion_point(field_get:PacoteIASimulador2D.bola)
  return bola_ != NULL ? *bola_ : *default_instance_->bola_;
}
::PacoteBola* PacoteIASimulador2D::mutable_bola() {
  set_has_bola();
  if (bola_ == NULL) {
    bola_ = new ::PacoteBola;
  }
  // @@protoc_insertion_point(field_mutable:PacoteIASimulador2D.bola)
  return bola_;
}
::PacoteBola* PacoteIASimulador2D::release_bola() {
  // @@protoc_insertion_point(field_release:PacoteIASimulador2D.bola)
  clear_has_bola();
  ::PacoteBola* temp = bola_;
  bola_ = NULL;
  return temp;
}
void PacoteIASimulador2D::set_allocated_bola(::PacoteBola* bola) {
  delete bola_;
  bola_ = bola;
  if (bola) {
    set_has_bola();
  } else {
    clear_has_bola();
  }
  // @@protoc_insertion_point(field_set_allocated:PacoteIASimulador2D.bola)
}

// optional .SSL_Referee dadosEstados = 2;
bool PacoteIASimulador2D::has_dadosestados() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void PacoteIASimulador2D::set_has_dadosestados() {
  _has_bits_[0] |= 0x00000002u;
}
void PacoteIASimulador2D::clear_has_dadosestados() {
  _has_bits_[0] &= ~0x00000002u;
}
void PacoteIASimulador2D::clear_dadosestados() {
  if (dadosestados_ != NULL) dadosestados_->::SSL_Referee::Clear();
  clear_has_dadosestados();
}
const ::SSL_Referee& PacoteIASimulador2D::dadosestados() const {
  // @@protoc_insertion_point(field_get:PacoteIASimulador2D.dadosEstados)
  return dadosestados_ != NULL ? *dadosestados_ : *default_instance_->dadosestados_;
}
::SSL_Referee* PacoteIASimulador2D::mutable_dadosestados() {
  set_has_dadosestados();
  if (dadosestados_ == NULL) {
    dadosestados_ = new ::SSL_Referee;
  }
  // @@protoc_insertion_point(field_mutable:PacoteIASimulador2D.dadosEstados)
  return dadosestados_;
}
::SSL_Referee* PacoteIASimulador2D::release_dadosestados() {
  // @@protoc_insertion_point(field_release:PacoteIASimulador2D.dadosEstados)
  clear_has_dadosestados();
  ::SSL_Referee* temp = dadosestados_;
  dadosestados_ = NULL;
  return temp;
}
void PacoteIASimulador2D::set_allocated_dadosestados(::SSL_Referee* dadosestados) {
  delete dadosestados_;
  dadosestados_ = dadosestados;
  if (dadosestados) {
    set_has_dadosestados();
  } else {
    clear_has_dadosestados();
  }
  // @@protoc_insertion_point(field_set_allocated:PacoteIASimulador2D.dadosEstados)
}

// optional string jogada = 3;
bool PacoteIASimulador2D::has_jogada() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void PacoteIASimulador2D::set_has_jogada() {
  _has_bits_[0] |= 0x00000004u;
}
void PacoteIASimulador2D::clear_has_jogada() {
  _has_bits_[0] &= ~0x00000004u;
}
void PacoteIASimulador2D::clear_jogada() {
  jogada_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_jogada();
}
 const ::std::string& PacoteIASimulador2D::jogada() const {
  // @@protoc_insertion_point(field_get:PacoteIASimulador2D.jogada)
  return jogada_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PacoteIASimulador2D::set_jogada(const ::std::string& value) {
  set_has_jogada();
  jogada_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:PacoteIASimulador2D.jogada)
}
 void PacoteIASimulador2D::set_jogada(const char* value) {
  set_has_jogada();
  jogada_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:PacoteIASimulador2D.jogada)
}
 void PacoteIASimulador2D::set_jogada(const char* value, size_t size) {
  set_has_jogada();
  jogada_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:PacoteIASimulador2D.jogada)
}
 ::std::string* PacoteIASimulador2D::mutable_jogada() {
  set_has_jogada();
  // @@protoc_insertion_point(field_mutable:PacoteIASimulador2D.jogada)
  return jogada_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* PacoteIASimulador2D::release_jogada() {
  // @@protoc_insertion_point(field_release:PacoteIASimulador2D.jogada)
  clear_has_jogada();
  return jogada_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PacoteIASimulador2D::set_allocated_jogada(::std::string* jogada) {
  if (jogada != NULL) {
    set_has_jogada();
  } else {
    clear_has_jogada();
  }
  jogada_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), jogada);
  // @@protoc_insertion_point(field_set_allocated:PacoteIASimulador2D.jogada)
}

// repeated string fatosDoMundo = 4;
int PacoteIASimulador2D::fatosdomundo_size() const {
  return fatosdomundo_.size();
}
void PacoteIASimulador2D::clear_fatosdomundo() {
  fatosdomundo_.Clear();
}
 const ::std::string& PacoteIASimulador2D::fatosdomundo(int index) const {
  // @@protoc_insertion_point(field_get:PacoteIASimulador2D.fatosDoMundo)
  return fatosdomundo_.Get(index);
}
 ::std::string* PacoteIASimulador2D::mutable_fatosdomundo(int index) {
  // @@protoc_insertion_point(field_mutable:PacoteIASimulador2D.fatosDoMundo)
  return fatosdomundo_.Mutable(index);
}
 void PacoteIASimulador2D::set_fatosdomundo(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:PacoteIASimulador2D.fatosDoMundo)
  fatosdomundo_.Mutable(index)->assign(value);
}
 void PacoteIASimulador2D::set_fatosdomundo(int index, const char* value) {
  fatosdomundo_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:PacoteIASimulador2D.fatosDoMundo)
}
 void PacoteIASimulador2D::set_fatosdomundo(int index, const char* value, size_t size) {
  fatosdomundo_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:PacoteIASimulador2D.fatosDoMundo)
}
 ::std::string* PacoteIASimulador2D::add_fatosdomundo() {
  // @@protoc_insertion_point(field_add_mutable:PacoteIASimulador2D.fatosDoMundo)
  return fatosdomundo_.Add();
}
 void PacoteIASimulador2D::add_fatosdomundo(const ::std::string& value) {
  fatosdomundo_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:PacoteIASimulador2D.fatosDoMundo)
}
 void PacoteIASimulador2D::add_fatosdomundo(const char* value) {
  fatosdomundo_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:PacoteIASimulador2D.fatosDoMundo)
}
 void PacoteIASimulador2D::add_fatosdomundo(const char* value, size_t size) {
  fatosdomundo_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:PacoteIASimulador2D.fatosDoMundo)
}
 const ::google::protobuf::RepeatedPtrField< ::std::string>&
PacoteIASimulador2D::fatosdomundo() const {
  // @@protoc_insertion_point(field_list:PacoteIASimulador2D.fatosDoMundo)
  return fatosdomundo_;
}
 ::google::protobuf::RepeatedPtrField< ::std::string>*
PacoteIASimulador2D::mutable_fatosdomundo() {
  // @@protoc_insertion_point(field_mutable_list:PacoteIASimulador2D.fatosDoMundo)
  return &fatosdomundo_;
}

// repeated .PacoteRoboIA robos = 5;
int PacoteIASimulador2D::robos_size() const {
  return robos_.size();
}
void PacoteIASimulador2D::clear_robos() {
  robos_.Clear();
}
const ::PacoteRoboIA& PacoteIASimulador2D::robos(int index) const {
  // @@protoc_insertion_point(field_get:PacoteIASimulador2D.robos)
  return robos_.Get(index);
}
::PacoteRoboIA* PacoteIASimulador2D::mutable_robos(int index) {
  // @@protoc_insertion_point(field_mutable:PacoteIASimulador2D.robos)
  return robos_.Mutable(index);
}
::PacoteRoboIA* PacoteIASimulador2D::add_robos() {
  // @@protoc_insertion_point(field_add:PacoteIASimulador2D.robos)
  return robos_.Add();
}
::google::protobuf::RepeatedPtrField< ::PacoteRoboIA >*
PacoteIASimulador2D::mutable_robos() {
  // @@protoc_insertion_point(field_mutable_list:PacoteIASimulador2D.robos)
  return &robos_;
}
const ::google::protobuf::RepeatedPtrField< ::PacoteRoboIA >&
PacoteIASimulador2D::robos() const {
  // @@protoc_insertion_point(field_list:PacoteIASimulador2D.robos)
  return robos_;
}

// repeated .PacoteRobo robosAdv = 6;
int PacoteIASimulador2D::robosadv_size() const {
  return robosadv_.size();
}
void PacoteIASimulador2D::clear_robosadv() {
  robosadv_.Clear();
}
const ::PacoteRobo& PacoteIASimulador2D::robosadv(int index) const {
  // @@protoc_insertion_point(field_get:PacoteIASimulador2D.robosAdv)
  return robosadv_.Get(index);
}
::PacoteRobo* PacoteIASimulador2D::mutable_robosadv(int index) {
  // @@protoc_insertion_point(field_mutable:PacoteIASimulador2D.robosAdv)
  return robosadv_.Mutable(index);
}
::PacoteRobo* PacoteIASimulador2D::add_robosadv() {
  // @@protoc_insertion_point(field_add:PacoteIASimulador2D.robosAdv)
  return robosadv_.Add();
}
::google::protobuf::RepeatedPtrField< ::PacoteRobo >*
PacoteIASimulador2D::mutable_robosadv() {
  // @@protoc_insertion_point(field_mutable_list:PacoteIASimulador2D.robosAdv)
  return &robosadv_;
}
const ::google::protobuf::RepeatedPtrField< ::PacoteRobo >&
PacoteIASimulador2D::robosadv() const {
  // @@protoc_insertion_point(field_list:PacoteIASimulador2D.robosAdv)
  return robosadv_;
}

// required .PacoteIASimulador2D.CorEquipe corEquipe = 7;
bool PacoteIASimulador2D::has_corequipe() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void PacoteIASimulador2D::set_has_corequipe() {
  _has_bits_[0] |= 0x00000040u;
}
void PacoteIASimulador2D::clear_has_corequipe() {
  _has_bits_[0] &= ~0x00000040u;
}
void PacoteIASimulador2D::clear_corequipe() {
  corequipe_ = 0;
  clear_has_corequipe();
}
 ::PacoteIASimulador2D_CorEquipe PacoteIASimulador2D::corequipe() const {
  // @@protoc_insertion_point(field_get:PacoteIASimulador2D.corEquipe)
  return static_cast< ::PacoteIASimulador2D_CorEquipe >(corequipe_);
}
 void PacoteIASimulador2D::set_corequipe(::PacoteIASimulador2D_CorEquipe value) {
  assert(::PacoteIASimulador2D_CorEquipe_IsValid(value));
  set_has_corequipe();
  corequipe_ = value;
  // @@protoc_insertion_point(field_set:PacoteIASimulador2D.corEquipe)
}

// optional .PacoteIASimulador2D.LadoCampo ladoCampo = 8;
bool PacoteIASimulador2D::has_ladocampo() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
void PacoteIASimulador2D::set_has_ladocampo() {
  _has_bits_[0] |= 0x00000080u;
}
void PacoteIASimulador2D::clear_has_ladocampo() {
  _has_bits_[0] &= ~0x00000080u;
}
void PacoteIASimulador2D::clear_ladocampo() {
  ladocampo_ = 0;
  clear_has_ladocampo();
}
 ::PacoteIASimulador2D_LadoCampo PacoteIASimulador2D::ladocampo() const {
  // @@protoc_insertion_point(field_get:PacoteIASimulador2D.ladoCampo)
  return static_cast< ::PacoteIASimulador2D_LadoCampo >(ladocampo_);
}
 void PacoteIASimulador2D::set_ladocampo(::PacoteIASimulador2D_LadoCampo value) {
  assert(::PacoteIASimulador2D_LadoCampo_IsValid(value));
  set_has_ladocampo();
  ladocampo_ = value;
  // @@protoc_insertion_point(field_set:PacoteIASimulador2D.ladoCampo)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
