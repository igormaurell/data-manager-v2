// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: messages_vision_manager.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "messages_vision_manager.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace {

const ::google::protobuf::Descriptor* BallPackage_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  BallPackage_reflection_ = NULL;
const ::google::protobuf::Descriptor* RobotPackage_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  RobotPackage_reflection_ = NULL;
const ::google::protobuf::Descriptor* VisionPackage_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  VisionPackage_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_messages_5fvision_5fmanager_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_messages_5fvision_5fmanager_2eproto() {
  protobuf_AddDesc_messages_5fvision_5fmanager_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "messages_vision_manager.proto");
  GOOGLE_CHECK(file != NULL);
  BallPackage_descriptor_ = file->message_type(0);
  static const int BallPackage_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BallPackage, x_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BallPackage, y_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BallPackage, z_),
  };
  BallPackage_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      BallPackage_descriptor_,
      BallPackage::default_instance_,
      BallPackage_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BallPackage, _has_bits_[0]),
      -1,
      -1,
      sizeof(BallPackage),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BallPackage, _internal_metadata_),
      -1);
  RobotPackage_descriptor_ = file->message_type(1);
  static const int RobotPackage_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RobotPackage, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RobotPackage, x_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RobotPackage, y_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RobotPackage, orientation_),
  };
  RobotPackage_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      RobotPackage_descriptor_,
      RobotPackage::default_instance_,
      RobotPackage_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RobotPackage, _has_bits_[0]),
      -1,
      -1,
      sizeof(RobotPackage),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RobotPackage, _internal_metadata_),
      -1);
  VisionPackage_descriptor_ = file->message_type(2);
  static const int VisionPackage_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(VisionPackage, frame_number_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(VisionPackage, delay_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(VisionPackage, ball_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(VisionPackage, team_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(VisionPackage, enemy_),
  };
  VisionPackage_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      VisionPackage_descriptor_,
      VisionPackage::default_instance_,
      VisionPackage_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(VisionPackage, _has_bits_[0]),
      -1,
      -1,
      sizeof(VisionPackage),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(VisionPackage, _internal_metadata_),
      -1);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_messages_5fvision_5fmanager_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      BallPackage_descriptor_, &BallPackage::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      RobotPackage_descriptor_, &RobotPackage::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      VisionPackage_descriptor_, &VisionPackage::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_messages_5fvision_5fmanager_2eproto() {
  delete BallPackage::default_instance_;
  delete BallPackage_reflection_;
  delete RobotPackage::default_instance_;
  delete RobotPackage_reflection_;
  delete VisionPackage::default_instance_;
  delete VisionPackage_reflection_;
}

void protobuf_AddDesc_messages_5fvision_5fmanager_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AddDesc_messages_5fvision_5fmanager_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\035messages_vision_manager.proto\".\n\013BallP"
    "ackage\022\t\n\001x\030\001 \002(\002\022\t\n\001y\030\002 \002(\002\022\t\n\001z\030\003 \002(\002\""
    "E\n\014RobotPackage\022\n\n\002id\030\001 \002(\r\022\t\n\001x\030\002 \002(\002\022\t"
    "\n\001y\030\003 \002(\002\022\023\n\013orientation\030\004 \002(\002\"\213\001\n\rVisio"
    "nPackage\022\024\n\014frame_number\030\001 \002(\r\022\r\n\005delay\030"
    "\002 \002(\001\022\032\n\004ball\030\003 \002(\0132\014.BallPackage\022\033\n\004tea"
    "m\030\004 \003(\0132\r.RobotPackage\022\034\n\005enemy\030\005 \003(\0132\r."
    "RobotPackage", 292);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "messages_vision_manager.proto", &protobuf_RegisterTypes);
  BallPackage::default_instance_ = new BallPackage();
  RobotPackage::default_instance_ = new RobotPackage();
  VisionPackage::default_instance_ = new VisionPackage();
  BallPackage::default_instance_->InitAsDefaultInstance();
  RobotPackage::default_instance_->InitAsDefaultInstance();
  VisionPackage::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_messages_5fvision_5fmanager_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_messages_5fvision_5fmanager_2eproto {
  StaticDescriptorInitializer_messages_5fvision_5fmanager_2eproto() {
    protobuf_AddDesc_messages_5fvision_5fmanager_2eproto();
  }
} static_descriptor_initializer_messages_5fvision_5fmanager_2eproto_;

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BallPackage::kXFieldNumber;
const int BallPackage::kYFieldNumber;
const int BallPackage::kZFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BallPackage::BallPackage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:BallPackage)
}

void BallPackage::InitAsDefaultInstance() {
}

BallPackage::BallPackage(const BallPackage& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:BallPackage)
}

void BallPackage::SharedCtor() {
  _cached_size_ = 0;
  x_ = 0;
  y_ = 0;
  z_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

BallPackage::~BallPackage() {
  // @@protoc_insertion_point(destructor:BallPackage)
  SharedDtor();
}

void BallPackage::SharedDtor() {
  if (this != default_instance_) {
  }
}

void BallPackage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BallPackage::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BallPackage_descriptor_;
}

const BallPackage& BallPackage::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messages_5fvision_5fmanager_2eproto();
  return *default_instance_;
}

BallPackage* BallPackage::default_instance_ = NULL;

BallPackage* BallPackage::New(::google::protobuf::Arena* arena) const {
  BallPackage* n = new BallPackage;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BallPackage::Clear() {
// @@protoc_insertion_point(message_clear_start:BallPackage)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(BallPackage, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<BallPackage*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(x_, z_);

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool BallPackage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:BallPackage)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required float x = 1;
      case 1: {
        if (tag == 13) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &x_)));
          set_has_x();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(21)) goto parse_y;
        break;
      }

      // required float y = 2;
      case 2: {
        if (tag == 21) {
         parse_y:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &y_)));
          set_has_y();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(29)) goto parse_z;
        break;
      }

      // required float z = 3;
      case 3: {
        if (tag == 29) {
         parse_z:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &z_)));
          set_has_z();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:BallPackage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:BallPackage)
  return false;
#undef DO_
}

void BallPackage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:BallPackage)
  // required float x = 1;
  if (has_x()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(1, this->x(), output);
  }

  // required float y = 2;
  if (has_y()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->y(), output);
  }

  // required float z = 3;
  if (has_z()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->z(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:BallPackage)
}

::google::protobuf::uint8* BallPackage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:BallPackage)
  // required float x = 1;
  if (has_x()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(1, this->x(), target);
  }

  // required float y = 2;
  if (has_y()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->y(), target);
  }

  // required float z = 3;
  if (has_z()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->z(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:BallPackage)
  return target;
}

int BallPackage::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:BallPackage)
  int total_size = 0;

  if (has_x()) {
    // required float x = 1;
    total_size += 1 + 4;
  }

  if (has_y()) {
    // required float y = 2;
    total_size += 1 + 4;
  }

  if (has_z()) {
    // required float z = 3;
    total_size += 1 + 4;
  }

  return total_size;
}
int BallPackage::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:BallPackage)
  int total_size = 0;

  if (((_has_bits_[0] & 0x00000007) ^ 0x00000007) == 0) {  // All required fields are present.
    // required float x = 1;
    total_size += 1 + 4;

    // required float y = 2;
    total_size += 1 + 4;

    // required float z = 3;
    total_size += 1 + 4;

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BallPackage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:BallPackage)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const BallPackage* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const BallPackage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:BallPackage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:BallPackage)
    MergeFrom(*source);
  }
}

void BallPackage::MergeFrom(const BallPackage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:BallPackage)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_x()) {
      set_x(from.x());
    }
    if (from.has_y()) {
      set_y(from.y());
    }
    if (from.has_z()) {
      set_z(from.z());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void BallPackage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:BallPackage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BallPackage::CopyFrom(const BallPackage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:BallPackage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BallPackage::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;

  return true;
}

void BallPackage::Swap(BallPackage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BallPackage::InternalSwap(BallPackage* other) {
  std::swap(x_, other->x_);
  std::swap(y_, other->y_);
  std::swap(z_, other->z_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BallPackage::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = BallPackage_descriptor_;
  metadata.reflection = BallPackage_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BallPackage

// required float x = 1;
bool BallPackage::has_x() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void BallPackage::set_has_x() {
  _has_bits_[0] |= 0x00000001u;
}
void BallPackage::clear_has_x() {
  _has_bits_[0] &= ~0x00000001u;
}
void BallPackage::clear_x() {
  x_ = 0;
  clear_has_x();
}
 float BallPackage::x() const {
  // @@protoc_insertion_point(field_get:BallPackage.x)
  return x_;
}
 void BallPackage::set_x(float value) {
  set_has_x();
  x_ = value;
  // @@protoc_insertion_point(field_set:BallPackage.x)
}

// required float y = 2;
bool BallPackage::has_y() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void BallPackage::set_has_y() {
  _has_bits_[0] |= 0x00000002u;
}
void BallPackage::clear_has_y() {
  _has_bits_[0] &= ~0x00000002u;
}
void BallPackage::clear_y() {
  y_ = 0;
  clear_has_y();
}
 float BallPackage::y() const {
  // @@protoc_insertion_point(field_get:BallPackage.y)
  return y_;
}
 void BallPackage::set_y(float value) {
  set_has_y();
  y_ = value;
  // @@protoc_insertion_point(field_set:BallPackage.y)
}

// required float z = 3;
bool BallPackage::has_z() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void BallPackage::set_has_z() {
  _has_bits_[0] |= 0x00000004u;
}
void BallPackage::clear_has_z() {
  _has_bits_[0] &= ~0x00000004u;
}
void BallPackage::clear_z() {
  z_ = 0;
  clear_has_z();
}
 float BallPackage::z() const {
  // @@protoc_insertion_point(field_get:BallPackage.z)
  return z_;
}
 void BallPackage::set_z(float value) {
  set_has_z();
  z_ = value;
  // @@protoc_insertion_point(field_set:BallPackage.z)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RobotPackage::kIdFieldNumber;
const int RobotPackage::kXFieldNumber;
const int RobotPackage::kYFieldNumber;
const int RobotPackage::kOrientationFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RobotPackage::RobotPackage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:RobotPackage)
}

void RobotPackage::InitAsDefaultInstance() {
}

RobotPackage::RobotPackage(const RobotPackage& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:RobotPackage)
}

void RobotPackage::SharedCtor() {
  _cached_size_ = 0;
  id_ = 0u;
  x_ = 0;
  y_ = 0;
  orientation_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

RobotPackage::~RobotPackage() {
  // @@protoc_insertion_point(destructor:RobotPackage)
  SharedDtor();
}

void RobotPackage::SharedDtor() {
  if (this != default_instance_) {
  }
}

void RobotPackage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RobotPackage::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RobotPackage_descriptor_;
}

const RobotPackage& RobotPackage::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messages_5fvision_5fmanager_2eproto();
  return *default_instance_;
}

RobotPackage* RobotPackage::default_instance_ = NULL;

RobotPackage* RobotPackage::New(::google::protobuf::Arena* arena) const {
  RobotPackage* n = new RobotPackage;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RobotPackage::Clear() {
// @@protoc_insertion_point(message_clear_start:RobotPackage)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(RobotPackage, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<RobotPackage*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(id_, orientation_);

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool RobotPackage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:RobotPackage)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(21)) goto parse_x;
        break;
      }

      // required float x = 2;
      case 2: {
        if (tag == 21) {
         parse_x:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &x_)));
          set_has_x();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(29)) goto parse_y;
        break;
      }

      // required float y = 3;
      case 3: {
        if (tag == 29) {
         parse_y:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &y_)));
          set_has_y();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(37)) goto parse_orientation;
        break;
      }

      // required float orientation = 4;
      case 4: {
        if (tag == 37) {
         parse_orientation:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &orientation_)));
          set_has_orientation();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:RobotPackage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:RobotPackage)
  return false;
#undef DO_
}

void RobotPackage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:RobotPackage)
  // required uint32 id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->id(), output);
  }

  // required float x = 2;
  if (has_x()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->x(), output);
  }

  // required float y = 3;
  if (has_y()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->y(), output);
  }

  // required float orientation = 4;
  if (has_orientation()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(4, this->orientation(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:RobotPackage)
}

::google::protobuf::uint8* RobotPackage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:RobotPackage)
  // required uint32 id = 1;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->id(), target);
  }

  // required float x = 2;
  if (has_x()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->x(), target);
  }

  // required float y = 3;
  if (has_y()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->y(), target);
  }

  // required float orientation = 4;
  if (has_orientation()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(4, this->orientation(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:RobotPackage)
  return target;
}

int RobotPackage::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:RobotPackage)
  int total_size = 0;

  if (has_id()) {
    // required uint32 id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->id());
  }

  if (has_x()) {
    // required float x = 2;
    total_size += 1 + 4;
  }

  if (has_y()) {
    // required float y = 3;
    total_size += 1 + 4;
  }

  if (has_orientation()) {
    // required float orientation = 4;
    total_size += 1 + 4;
  }

  return total_size;
}
int RobotPackage::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:RobotPackage)
  int total_size = 0;

  if (((_has_bits_[0] & 0x0000000f) ^ 0x0000000f) == 0) {  // All required fields are present.
    // required uint32 id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->id());

    // required float x = 2;
    total_size += 1 + 4;

    // required float y = 3;
    total_size += 1 + 4;

    // required float orientation = 4;
    total_size += 1 + 4;

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RobotPackage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:RobotPackage)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const RobotPackage* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const RobotPackage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:RobotPackage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:RobotPackage)
    MergeFrom(*source);
  }
}

void RobotPackage::MergeFrom(const RobotPackage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:RobotPackage)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
    if (from.has_x()) {
      set_x(from.x());
    }
    if (from.has_y()) {
      set_y(from.y());
    }
    if (from.has_orientation()) {
      set_orientation(from.orientation());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void RobotPackage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:RobotPackage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RobotPackage::CopyFrom(const RobotPackage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:RobotPackage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RobotPackage::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000f) != 0x0000000f) return false;

  return true;
}

void RobotPackage::Swap(RobotPackage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RobotPackage::InternalSwap(RobotPackage* other) {
  std::swap(id_, other->id_);
  std::swap(x_, other->x_);
  std::swap(y_, other->y_);
  std::swap(orientation_, other->orientation_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RobotPackage::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = RobotPackage_descriptor_;
  metadata.reflection = RobotPackage_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RobotPackage

// required uint32 id = 1;
bool RobotPackage::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void RobotPackage::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
void RobotPackage::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void RobotPackage::clear_id() {
  id_ = 0u;
  clear_has_id();
}
 ::google::protobuf::uint32 RobotPackage::id() const {
  // @@protoc_insertion_point(field_get:RobotPackage.id)
  return id_;
}
 void RobotPackage::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:RobotPackage.id)
}

// required float x = 2;
bool RobotPackage::has_x() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void RobotPackage::set_has_x() {
  _has_bits_[0] |= 0x00000002u;
}
void RobotPackage::clear_has_x() {
  _has_bits_[0] &= ~0x00000002u;
}
void RobotPackage::clear_x() {
  x_ = 0;
  clear_has_x();
}
 float RobotPackage::x() const {
  // @@protoc_insertion_point(field_get:RobotPackage.x)
  return x_;
}
 void RobotPackage::set_x(float value) {
  set_has_x();
  x_ = value;
  // @@protoc_insertion_point(field_set:RobotPackage.x)
}

// required float y = 3;
bool RobotPackage::has_y() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void RobotPackage::set_has_y() {
  _has_bits_[0] |= 0x00000004u;
}
void RobotPackage::clear_has_y() {
  _has_bits_[0] &= ~0x00000004u;
}
void RobotPackage::clear_y() {
  y_ = 0;
  clear_has_y();
}
 float RobotPackage::y() const {
  // @@protoc_insertion_point(field_get:RobotPackage.y)
  return y_;
}
 void RobotPackage::set_y(float value) {
  set_has_y();
  y_ = value;
  // @@protoc_insertion_point(field_set:RobotPackage.y)
}

// required float orientation = 4;
bool RobotPackage::has_orientation() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void RobotPackage::set_has_orientation() {
  _has_bits_[0] |= 0x00000008u;
}
void RobotPackage::clear_has_orientation() {
  _has_bits_[0] &= ~0x00000008u;
}
void RobotPackage::clear_orientation() {
  orientation_ = 0;
  clear_has_orientation();
}
 float RobotPackage::orientation() const {
  // @@protoc_insertion_point(field_get:RobotPackage.orientation)
  return orientation_;
}
 void RobotPackage::set_orientation(float value) {
  set_has_orientation();
  orientation_ = value;
  // @@protoc_insertion_point(field_set:RobotPackage.orientation)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int VisionPackage::kFrameNumberFieldNumber;
const int VisionPackage::kDelayFieldNumber;
const int VisionPackage::kBallFieldNumber;
const int VisionPackage::kTeamFieldNumber;
const int VisionPackage::kEnemyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

VisionPackage::VisionPackage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:VisionPackage)
}

void VisionPackage::InitAsDefaultInstance() {
  ball_ = const_cast< ::BallPackage*>(&::BallPackage::default_instance());
}

VisionPackage::VisionPackage(const VisionPackage& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:VisionPackage)
}

void VisionPackage::SharedCtor() {
  _cached_size_ = 0;
  frame_number_ = 0u;
  delay_ = 0;
  ball_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

VisionPackage::~VisionPackage() {
  // @@protoc_insertion_point(destructor:VisionPackage)
  SharedDtor();
}

void VisionPackage::SharedDtor() {
  if (this != default_instance_) {
    delete ball_;
  }
}

void VisionPackage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* VisionPackage::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return VisionPackage_descriptor_;
}

const VisionPackage& VisionPackage::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messages_5fvision_5fmanager_2eproto();
  return *default_instance_;
}

VisionPackage* VisionPackage::default_instance_ = NULL;

VisionPackage* VisionPackage::New(::google::protobuf::Arena* arena) const {
  VisionPackage* n = new VisionPackage;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void VisionPackage::Clear() {
// @@protoc_insertion_point(message_clear_start:VisionPackage)
  if (_has_bits_[0 / 32] & 7u) {
    frame_number_ = 0u;
    delay_ = 0;
    if (has_ball()) {
      if (ball_ != NULL) ball_->::BallPackage::Clear();
    }
  }
  team_.Clear();
  enemy_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool VisionPackage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:VisionPackage)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 frame_number = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &frame_number_)));
          set_has_frame_number();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(17)) goto parse_delay;
        break;
      }

      // required double delay = 2;
      case 2: {
        if (tag == 17) {
         parse_delay:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &delay_)));
          set_has_delay();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_ball;
        break;
      }

      // required .BallPackage ball = 3;
      case 3: {
        if (tag == 26) {
         parse_ball:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_ball()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_team;
        break;
      }

      // repeated .RobotPackage team = 4;
      case 4: {
        if (tag == 34) {
         parse_team:
          DO_(input->IncrementRecursionDepth());
         parse_loop_team:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_team()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_loop_team;
        if (input->ExpectTag(42)) goto parse_loop_enemy;
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      // repeated .RobotPackage enemy = 5;
      case 5: {
        if (tag == 42) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_enemy:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_enemy()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_loop_enemy;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:VisionPackage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:VisionPackage)
  return false;
#undef DO_
}

void VisionPackage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:VisionPackage)
  // required uint32 frame_number = 1;
  if (has_frame_number()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->frame_number(), output);
  }

  // required double delay = 2;
  if (has_delay()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->delay(), output);
  }

  // required .BallPackage ball = 3;
  if (has_ball()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->ball_, output);
  }

  // repeated .RobotPackage team = 4;
  for (unsigned int i = 0, n = this->team_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->team(i), output);
  }

  // repeated .RobotPackage enemy = 5;
  for (unsigned int i = 0, n = this->enemy_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->enemy(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:VisionPackage)
}

::google::protobuf::uint8* VisionPackage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:VisionPackage)
  // required uint32 frame_number = 1;
  if (has_frame_number()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->frame_number(), target);
  }

  // required double delay = 2;
  if (has_delay()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->delay(), target);
  }

  // required .BallPackage ball = 3;
  if (has_ball()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->ball_, false, target);
  }

  // repeated .RobotPackage team = 4;
  for (unsigned int i = 0, n = this->team_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, this->team(i), false, target);
  }

  // repeated .RobotPackage enemy = 5;
  for (unsigned int i = 0, n = this->enemy_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        5, this->enemy(i), false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:VisionPackage)
  return target;
}

int VisionPackage::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:VisionPackage)
  int total_size = 0;

  if (has_frame_number()) {
    // required uint32 frame_number = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->frame_number());
  }

  if (has_delay()) {
    // required double delay = 2;
    total_size += 1 + 8;
  }

  if (has_ball()) {
    // required .BallPackage ball = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->ball_);
  }

  return total_size;
}
int VisionPackage::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:VisionPackage)
  int total_size = 0;

  if (((_has_bits_[0] & 0x00000007) ^ 0x00000007) == 0) {  // All required fields are present.
    // required uint32 frame_number = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->frame_number());

    // required double delay = 2;
    total_size += 1 + 8;

    // required .BallPackage ball = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->ball_);

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // repeated .RobotPackage team = 4;
  total_size += 1 * this->team_size();
  for (int i = 0; i < this->team_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->team(i));
  }

  // repeated .RobotPackage enemy = 5;
  total_size += 1 * this->enemy_size();
  for (int i = 0; i < this->enemy_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->enemy(i));
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void VisionPackage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:VisionPackage)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const VisionPackage* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const VisionPackage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:VisionPackage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:VisionPackage)
    MergeFrom(*source);
  }
}

void VisionPackage::MergeFrom(const VisionPackage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:VisionPackage)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  team_.MergeFrom(from.team_);
  enemy_.MergeFrom(from.enemy_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_frame_number()) {
      set_frame_number(from.frame_number());
    }
    if (from.has_delay()) {
      set_delay(from.delay());
    }
    if (from.has_ball()) {
      mutable_ball()->::BallPackage::MergeFrom(from.ball());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void VisionPackage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:VisionPackage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void VisionPackage::CopyFrom(const VisionPackage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:VisionPackage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool VisionPackage::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;

  if (has_ball()) {
    if (!this->ball_->IsInitialized()) return false;
  }
  if (!::google::protobuf::internal::AllAreInitialized(this->team())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->enemy())) return false;
  return true;
}

void VisionPackage::Swap(VisionPackage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void VisionPackage::InternalSwap(VisionPackage* other) {
  std::swap(frame_number_, other->frame_number_);
  std::swap(delay_, other->delay_);
  std::swap(ball_, other->ball_);
  team_.UnsafeArenaSwap(&other->team_);
  enemy_.UnsafeArenaSwap(&other->enemy_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata VisionPackage::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = VisionPackage_descriptor_;
  metadata.reflection = VisionPackage_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// VisionPackage

// required uint32 frame_number = 1;
bool VisionPackage::has_frame_number() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void VisionPackage::set_has_frame_number() {
  _has_bits_[0] |= 0x00000001u;
}
void VisionPackage::clear_has_frame_number() {
  _has_bits_[0] &= ~0x00000001u;
}
void VisionPackage::clear_frame_number() {
  frame_number_ = 0u;
  clear_has_frame_number();
}
 ::google::protobuf::uint32 VisionPackage::frame_number() const {
  // @@protoc_insertion_point(field_get:VisionPackage.frame_number)
  return frame_number_;
}
 void VisionPackage::set_frame_number(::google::protobuf::uint32 value) {
  set_has_frame_number();
  frame_number_ = value;
  // @@protoc_insertion_point(field_set:VisionPackage.frame_number)
}

// required double delay = 2;
bool VisionPackage::has_delay() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void VisionPackage::set_has_delay() {
  _has_bits_[0] |= 0x00000002u;
}
void VisionPackage::clear_has_delay() {
  _has_bits_[0] &= ~0x00000002u;
}
void VisionPackage::clear_delay() {
  delay_ = 0;
  clear_has_delay();
}
 double VisionPackage::delay() const {
  // @@protoc_insertion_point(field_get:VisionPackage.delay)
  return delay_;
}
 void VisionPackage::set_delay(double value) {
  set_has_delay();
  delay_ = value;
  // @@protoc_insertion_point(field_set:VisionPackage.delay)
}

// required .BallPackage ball = 3;
bool VisionPackage::has_ball() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void VisionPackage::set_has_ball() {
  _has_bits_[0] |= 0x00000004u;
}
void VisionPackage::clear_has_ball() {
  _has_bits_[0] &= ~0x00000004u;
}
void VisionPackage::clear_ball() {
  if (ball_ != NULL) ball_->::BallPackage::Clear();
  clear_has_ball();
}
const ::BallPackage& VisionPackage::ball() const {
  // @@protoc_insertion_point(field_get:VisionPackage.ball)
  return ball_ != NULL ? *ball_ : *default_instance_->ball_;
}
::BallPackage* VisionPackage::mutable_ball() {
  set_has_ball();
  if (ball_ == NULL) {
    ball_ = new ::BallPackage;
  }
  // @@protoc_insertion_point(field_mutable:VisionPackage.ball)
  return ball_;
}
::BallPackage* VisionPackage::release_ball() {
  // @@protoc_insertion_point(field_release:VisionPackage.ball)
  clear_has_ball();
  ::BallPackage* temp = ball_;
  ball_ = NULL;
  return temp;
}
void VisionPackage::set_allocated_ball(::BallPackage* ball) {
  delete ball_;
  ball_ = ball;
  if (ball) {
    set_has_ball();
  } else {
    clear_has_ball();
  }
  // @@protoc_insertion_point(field_set_allocated:VisionPackage.ball)
}

// repeated .RobotPackage team = 4;
int VisionPackage::team_size() const {
  return team_.size();
}
void VisionPackage::clear_team() {
  team_.Clear();
}
const ::RobotPackage& VisionPackage::team(int index) const {
  // @@protoc_insertion_point(field_get:VisionPackage.team)
  return team_.Get(index);
}
::RobotPackage* VisionPackage::mutable_team(int index) {
  // @@protoc_insertion_point(field_mutable:VisionPackage.team)
  return team_.Mutable(index);
}
::RobotPackage* VisionPackage::add_team() {
  // @@protoc_insertion_point(field_add:VisionPackage.team)
  return team_.Add();
}
::google::protobuf::RepeatedPtrField< ::RobotPackage >*
VisionPackage::mutable_team() {
  // @@protoc_insertion_point(field_mutable_list:VisionPackage.team)
  return &team_;
}
const ::google::protobuf::RepeatedPtrField< ::RobotPackage >&
VisionPackage::team() const {
  // @@protoc_insertion_point(field_list:VisionPackage.team)
  return team_;
}

// repeated .RobotPackage enemy = 5;
int VisionPackage::enemy_size() const {
  return enemy_.size();
}
void VisionPackage::clear_enemy() {
  enemy_.Clear();
}
const ::RobotPackage& VisionPackage::enemy(int index) const {
  // @@protoc_insertion_point(field_get:VisionPackage.enemy)
  return enemy_.Get(index);
}
::RobotPackage* VisionPackage::mutable_enemy(int index) {
  // @@protoc_insertion_point(field_mutable:VisionPackage.enemy)
  return enemy_.Mutable(index);
}
::RobotPackage* VisionPackage::add_enemy() {
  // @@protoc_insertion_point(field_add:VisionPackage.enemy)
  return enemy_.Add();
}
::google::protobuf::RepeatedPtrField< ::RobotPackage >*
VisionPackage::mutable_enemy() {
  // @@protoc_insertion_point(field_mutable_list:VisionPackage.enemy)
  return &enemy_;
}
const ::google::protobuf::RepeatedPtrField< ::RobotPackage >&
VisionPackage::enemy() const {
  // @@protoc_insertion_point(field_list:VisionPackage.enemy)
  return enemy_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
